credentials:
  system:
    domainCredentials:
    - credentials:
      - usernamePassword:
          id: "https://github.com"
          password: "{AQAAABAAAAAw9RfZd1rUrs3ijddV2z8ayF5wnktnUpceN9HxvREnoXDMeArZlR7PUCRj6t7F9/4bPhg9fTAirNu14Pjcju+Rbg==}"
          scope: GLOBAL
          username: "lujunbofan2019"
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
  - kubernetes:
      containerCapStr: "0"
      jenkinsTunnel: "jenkins-agent:50000"
      jenkinsUrl: "http://jenkins:8080"
      maxRequestsPerHostStr: "32"
      name: "kubernetes"
      namespace: "jx"
      serverUrl: "https://kubernetes.default"
      templates:
      - containers:
        - args: "cat"
          command: "/bin/sh -c"
          image: "lujunbofan/jenkins-gradle6-xl:21122020"
          name: "gradle6"
          privileged: true
          resourceLimitCpu: "2"
          resourceLimitMemory: "4Gi"
          resourceRequestCpu: "500m"
          resourceRequestMemory: "1Gi"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        - args: "^${computer.jnlpmac} ^${computer.name}"
          image: "jenkins/inbound-agent:4.3-8-alpine"
          name: "jnlp"
          resourceRequestCpu: "100m"
          resourceRequestMemory: "128Mi"
          workingDir: "/home/jenkins/agent"
        envVars:
        - containerEnvVar:
            key: "DOCKER_CONFIG"
            value: "/home/jenkins/.docker/"
        - containerEnvVar:
            key: "GIT_AUTHOR_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_AUTHOR_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "GIT_COMMITTER_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_COMMITTER_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "JENKINS_URL"
            value: "http://jenkins:8080"
        - containerEnvVar:
            key: "XDG_CONFIG_HOME"
            value: "/home/jenkins"
        - containerEnvVar:
            key: "_JAVA_OPTIONS"
            value: "-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true\
              \ -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10\
              \ -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms512m -Xmx4g"
        label: "jenkins-gradle6-xl"
        name: "jenkins-gradle6-xl"
        serviceAccount: "jenkins"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        - secretVolume:
            mountPath: "/home/jenkins/.docker"
            secretName: "jenkins-docker-cfg"
        - secretVolume:
            mountPath: "/home/jenkins/.gnupg"
            secretName: "jenkins-release-gpg"
        yamlMergeStrategy: "override"
      - containers:
        - args: "cat"
          command: "/bin/sh -c"
          image: "lujunbofan/jx-base:21122020"
          name: "jx-base"
          privileged: true
          resourceLimitCpu: "400m"
          resourceLimitMemory: "512Mi"
          resourceRequestCpu: "200m"
          resourceRequestMemory: "256Mi"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        - args: "^${computer.jnlpmac} ^${computer.name}"
          image: "jenkins/inbound-agent:4.3-8-alpine"
          name: "jnlp"
          resourceRequestCpu: "100m"
          resourceRequestMemory: "128Mi"
          workingDir: "/home/jenkins/agent"
        envVars:
        - containerEnvVar:
            key: "DOCKER_CONFIG"
            value: "/home/jenkins/.docker/"
        - containerEnvVar:
            key: "GIT_AUTHOR_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_AUTHOR_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "GIT_COMMITTER_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_COMMITTER_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "JENKINS_URL"
            value: "http://jenkins:8080"
        - containerEnvVar:
            key: "XDG_CONFIG_HOME"
            value: "/home/jenkins"
        label: "jenkins-jx-base"
        name: "jx-base"
        serviceAccount: "jenkins"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        - secretVolume:
            mountPath: "/home/jenkins/.docker"
            secretName: "jenkins-docker-cfg"
        yamlMergeStrategy: "override"
      - containers:
        - args: "^${computer.jnlpmac} ^${computer.name}"
          image: "jenkins/inbound-agent:4.3-8-alpine"
          name: "jnlp"
          resourceRequestCpu: "100m"
          resourceRequestMemory: "128Mi"
          workingDir: "/home/jenkins/agent"
        - args: "cat"
          command: "/bin/sh -c"
          image: "lujunbofan/jx-maven:21122020"
          name: "maven"
          privileged: true
          resourceLimitCpu: "1"
          resourceLimitMemory: "1024Mi"
          resourceRequestCpu: "400m"
          resourceRequestMemory: "512Mi"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        envVars:
        - containerEnvVar:
            key: "DOCKER_CONFIG"
            value: "/home/jenkins/.docker/"
        - containerEnvVar:
            key: "GIT_AUTHOR_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_AUTHOR_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "GIT_COMMITTER_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_COMMITTER_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "JENKINS_URL"
            value: "http://jenkins:8080"
        - containerEnvVar:
            key: "MAVEN_OPTS"
            value: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
        - containerEnvVar:
            key: "XDG_CONFIG_HOME"
            value: "/home/jenkins"
        - containerEnvVar:
            key: "_JAVA_OPTIONS"
            value: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap\
              \ -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5\
              \ -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90\
              \ -Xms10m -Xmx192m"
        label: "jenkins-maven"
        name: "maven"
        serviceAccount: "jenkins"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        - secretVolume:
            mountPath: "/root/.m2/"
            secretName: "jenkins-maven-settings"
        - secretVolume:
            mountPath: "/home/jenkins/.docker"
            secretName: "jenkins-docker-cfg"
        - secretVolume:
            mountPath: "/home/jenkins/.gnupg"
            secretName: "jenkins-release-gpg"
        yamlMergeStrategy: "override"
      - containers:
        - args: "^${computer.jnlpmac} ^${computer.name}"
          image: "jenkins/inbound-agent:4.3-8-alpine"
          name: "jnlp"
          resourceRequestCpu: "100m"
          resourceRequestMemory: "128Mi"
          workingDir: "/home/jenkins/agent"
        - args: "cat"
          command: "/bin/sh -c"
          image: "lujunbofan/jenkins-nodejs12x:21122020"
          name: "nodejs"
          privileged: true
          resourceLimitCpu: "2"
          resourceLimitMemory: "2048Mi"
          resourceRequestCpu: "400m"
          resourceRequestMemory: "512Mi"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        envVars:
        - containerEnvVar:
            key: "DOCKER_CONFIG"
            value: "/home/jenkins/.docker/"
        - containerEnvVar:
            key: "GIT_AUTHOR_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_AUTHOR_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "GIT_COMMITTER_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_COMMITTER_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "JENKINS_URL"
            value: "http://jenkins:8080"
        - containerEnvVar:
            key: "XDG_CONFIG_HOME"
            value: "/home/jenkins"
        label: "jenkins-nodejs12x"
        name: "nodejs12x"
        serviceAccount: "jenkins"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        - secretVolume:
            mountPath: "/home/jenkins/.docker"
            secretName: "jenkins-docker-cfg"
        yamlMergeStrategy: "override"
      - containers:
        - args: "cat"
          command: "/bin/sh -c"
          image: "hashicorp/packer:1.4.1"
          name: "packer"
          resourceRequestCpu: "100m"
          resourceRequestMemory: "128Mi"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        envVars:
        - containerEnvVar:
            key: "DOCKER_CONFIG"
            value: "/home/jenkins/.docker/"
        - containerEnvVar:
            key: "GIT_AUTHOR_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_AUTHOR_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "GIT_COMMITTER_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_COMMITTER_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "JENKINS_URL"
            value: "http://jenkins:8080"
        - containerEnvVar:
            key: "XDG_CONFIG_HOME"
            value: "/home/jenkins"
        label: "jenkins-packer"
        name: "packer"
        serviceAccount: "jenkins"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        - secretVolume:
            mountPath: "/home/jenkins/.docker"
            secretName: "jenkins-docker-cfg"
        yamlMergeStrategy: "override"
      - containers:
        - args: "^${computer.jnlpmac} ^${computer.name}"
          image: "jenkins/inbound-agent:4.3-8-alpine"
          name: "jnlp"
          resourceRequestCpu: "100m"
          resourceRequestMemory: "128Mi"
          workingDir: "/home/jenkins/agent"
        - args: "cat"
          command: "/bin/sh -c"
          image: "lujunbofan/jx-base:21122020"
          name: "promote"
          privileged: true
          resourceLimitCpu: "400m"
          resourceLimitMemory: "200Mi"
          resourceRequestCpu: "200m"
          resourceRequestMemory: "100Mi"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        envVars:
        - containerEnvVar:
            key: "DOCKER_CONFIG"
            value: "/home/jenkins/.docker/"
        - containerEnvVar:
            key: "GIT_AUTHOR_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_AUTHOR_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "GIT_COMMITTER_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_COMMITTER_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "JENKINS_URL"
            value: "http://jenkins:8080"
        - containerEnvVar:
            key: "XDG_CONFIG_HOME"
            value: "/home/jenkins"
        label: "jenkins-promote"
        name: "promote"
        serviceAccount: "jenkins"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        - secretVolume:
            mountPath: "/home/jenkins/.docker"
            secretName: "jenkins-docker-cfg"
        yamlMergeStrategy: "override"
      - containers:
        - args: "^${computer.jnlpmac} ^${computer.name}"
          image: "jenkins/inbound-agent:4.3-8-alpine"
          name: "jnlp"
          resourceRequestCpu: "100m"
          resourceRequestMemory: "128Mi"
          workingDir: "/home/jenkins/agent"
        - args: "cat"
          command: "/bin/sh -c"
          image: "lujunbofan/jenkins-python37:21122020"
          name: "python"
          privileged: true
          resourceLimitCpu: "2"
          resourceLimitMemory: "2048Mi"
          resourceRequestCpu: "400m"
          resourceRequestMemory: "512Mi"
          ttyEnabled: true
          workingDir: "/home/jenkins/agent"
        envVars:
        - containerEnvVar:
            key: "DOCKER_CONFIG"
            value: "/home/jenkins/.docker/"
        - containerEnvVar:
            key: "GIT_AUTHOR_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_AUTHOR_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "GIT_COMMITTER_EMAIL"
            value: "jenkins-x@googlegroups.com"
        - containerEnvVar:
            key: "GIT_COMMITTER_NAME"
            value: "jenkins-x-bot"
        - containerEnvVar:
            key: "JENKINS_URL"
            value: "http://jenkins:8080"
        - containerEnvVar:
            key: "XDG_CONFIG_HOME"
            value: "/home/jenkins"
        label: "jenkins-python37"
        name: "python37"
        serviceAccount: "jenkins"
        volumes:
        - hostPathVolume:
            hostPath: "/var/run/docker.sock"
            mountPath: "/var/run/docker.sock"
        - secretVolume:
            mountPath: "/home/jenkins/.docker"
            secretName: "jenkins-docker-cfg"
        yamlMergeStrategy: "override"
  disableRememberMe: false
  globalNodeProperties:
  - envVars:
      env:
      - key: "DOCKER_REGISTRY"
        value: "192.168.1.226:5000"
      - key: "DOCKER_OPTS"
        value: "--insecure-registry 192.168.1.226:5000"
      - key: "TILLER_NAMESPACE"
        value: "kube-system"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm: "legacy"
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  downloadSettings:
    useBrowser: false
  sSHD:
    port: -1
unclassified:
  artifactoryBuilder:
    useCredentialsPlugin: false
  bitbucketEndpointConfiguration:
    endpoints:
    - bitbucketCloudEndpoint:
        enableCache: false
        manageHooks: false
        repositoriesCacheDuration: 0
        teamCacheDuration: 0
  contentFilters:
    enabled: false
  gitHubPluginConfig:
    hookUrl: "http://jenkins-jx.84.71.15.56.nip.io/github-webhook/"
  gitLabConnectionConfig:
    connections:
    - clientBuilderId: "autodetect"
      connectionTimeout: 10
      ignoreCertificateErrors: false
      readTimeout: 10
  gitSCM:
    createAccountBasedOnEmail: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  globalPluginConfiguration:
    enabled: true
    namespace: "jx"
  ivyBuildTrigger:
    extendedVersionMatching: false
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "http://jenkins-jx.84.71.15.56.nip.io/"
  mailer:
    charset: "UTF-8"
    useSsl: false
  mavenModuleSet:
    localRepository: "default"
  pollSCM:
    pollingThreadCount: 10
tool:
  git:
    installations:
    - home: "git"
      name: "Default"
